version: '3.9'

services:
  db:
    image: postgres:17-alpine
    container_name: menu_db
    restart: always
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: menu_web
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy

    expose:
      - 8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
    restart: always

  nginx:
    build: ./nginx
    container_name: menu_nginx
    restart: always
    volumes:
      - ./nginx/html:/usr/share/nginx/html
      - ./certs:/etc/letsencrypt:ro
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web

  #front:
   # image: nginx:alpine
    #container_name: menu_front
    #restart: always
    #ports:
     # - "80:80"
    #volumes:
     # - ./dist:/usr/share/nginx/html:ro
      #- ./dist/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  postgres_data:
  static_volume:
  media_volume:
